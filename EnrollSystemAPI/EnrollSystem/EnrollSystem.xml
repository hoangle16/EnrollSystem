<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EnrollSystem</name>
    </assembly>
    <members>
        <member name="M:EnrollSystem.Controllers.CoursesController.GetAll">
            <summary>
            Get All Courses
            </summary>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.CoursesController.GetById(System.Int32)">
            <summary>
            Get course by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.CoursesController.Create(EnrollSystem.Models.Course.CourseInputModel)">
            <summary>
            Create new Course
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.CoursesController.Update(System.Int32,EnrollSystem.Models.Course.CourseInputModel)">
            <summary>
            Update course
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.CoursesController.Delete(System.Int32)">
            <summary>
            Delete course
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.RegistrationTimesController.GetRegistrationTime">
            <summary>
            Get Registration time
            </summary>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.RegistrationTimesController.SetTime(EnrollSystem.Models.RegistrationTime.RegistrationTimeInputModel)">
            <summary>
            Set Registration time
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.RegistrationTimesController.Close">
            <summary>
            Close Registration time
            </summary>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.RoomsController.GetAll">
            <summary>
            Get all room
            </summary>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.RoomsController.GetById(System.Int32)">
            <summary>
            Get room by roomId
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.RoomsController.Create(EnrollSystem.Models.Room.RoomInputModel)">
            <summary>
            Create new Room
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.RoomsController.Update(System.Int32,EnrollSystem.Models.Room.RoomInputModel)">
            <summary>
            Update room 
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.RoomsController.Delete(System.Int32)">
            <summary>
            Delete room
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.RoomsController.GetRoomsNotInUse(EnrollSystem.Models.Section.ScheduleModel)">
            <summary>
            Get rooms is not in use
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.SectionRegistersController.GetRegisterListByStudentId(System.Int32)">
            <summary>
            Get Register list by studentId
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.SectionRegistersController.GetRegisterListBySectionId(System.Int32)">
            <summary>
            Get Register list by sectionId
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.SectionRegistersController.GetSectionForRegistration(System.Int32)">
            <summary>
            Get Sections for register by studentId. If studentId = 0, return all section for register.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.SectionRegistersController.Registration(EnrollSystem.Models.StudentSectionRegistration.RegistrationModel)">
            <summary>
            Register section
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.SectionRegistersController.DeleteRegister(System.Int32,System.Int32)">
            <summary>
            Delete student from section registration
            </summary>
            <param name="studentId"></param>
            <param name="sectionId"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.SectionRegistersController.Approval(System.Int32)">
            <summary>
            Approval by sectionId
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.SectionsController.GetAll">
            <summary>
            Get all sections
            </summary>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.SectionsController.GetById(System.Int32)">
            <summary>
            Get section by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.SectionsController.Create(EnrollSystem.Models.Section.SectionRegisterModel)">
            <summary>
            Create new Section
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.SectionsController.Update(System.Int32,EnrollSystem.Models.Section.SectionUpdateModel)">
            <summary>
            Update section
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.SectionsController.Delete(System.Int32)">
            <summary>
            Delete Section by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.StudentsController.GetAll">
            <summary>
            Get Student's list
            </summary>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.StudentsController.GetById(System.Int32)">
            <summary>
            Get Student by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.StudentsController.GetSectionsByStudentId(System.Int32)">
            <summary>
            Get sections of Student by studentId
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.TeachersController.GetAll">
            <summary>
            Get all Teacher
            </summary>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.TeachersController.GetById(System.Int32)">
            <summary>
            Get teacher by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.TeachersController.GetTeacherReady(EnrollSystem.Models.Section.ScheduleModel)">
            <summary>
            Get list of available teachers at schedule
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.TeachersController.GetTeacherSections(System.Int32)">
            <summary>
            Get Teacher's sections by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.TeachersController.GetMySections">
            <summary>
            Get My Sections
            </summary>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.UsersController.#ctor(EnrollSystem.Interfaces.IUserRepository,EnrollSystem.Interfaces.IImageRepository,AutoMapper.IMapper,Microsoft.Extensions.Options.IOptions{EnrollSystem.Helpers.AppSettings})">
            <summary>
            UserController
            </summary>
            <param name="userService"></param>
            <param name="imageService"></param>
            <param name="mapper"></param>
            <param name="appSettings"></param>
        </member>
        <member name="M:EnrollSystem.Controllers.UsersController.Login(EnrollSystem.Models.User.LoginModel)">
            <summary>
            Login
            </summary>
            <param name="model"></param>
            <returns>User's Info and token</returns>
        </member>
        <member name="M:EnrollSystem.Controllers.UsersController.CreateAdmin(EnrollSystem.Models.User.UserRegisterModel)">
            <summary>
            Create admin account
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.UsersController.Create(EnrollSystem.Models.User.UserRegisterModel)">
            <summary>
            Create new User
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.UsersController.GetAll">
            <summary>
            Get all user info
            </summary>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.UsersController.Update(System.Int32,EnrollSystem.Models.User.UserUpdateModel)">
            <summary>
            Update user
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.UsersController.Delete(System.Int32)">
            <summary>
            Delete user
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.UsersController.Block(System.Int32)">
            <summary>
            Toggle IsActive user
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EnrollSystem.Controllers.UsersController.GetProfile">
            <summary>
            Get Profile
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
